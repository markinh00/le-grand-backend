services:
  backend:
    build: ./
    ports:
      - "8000:8000"
    volumes:
      - ./images:/app/images
    environment:
      - PGURL=postgresql://postgres:postgres@postgresql:5432/le-grand
    depends_on:
      - postgresql
      - mongo
    networks:
      - my_network

  postgresql:
    image: postgres:15
    restart: always
    build:
      context: api/services/db/sqlmodel
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: le-grand
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  mongo:
    image: mongo
    restart: always
    container_name: mongo_db
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: le-grand
    ports:
      - "27017:27017"
    networks:
      - my_network

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo_express_db
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge